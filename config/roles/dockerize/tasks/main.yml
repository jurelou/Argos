
- name: "stop all docker containers"
  shell: docker stop $(docker ps -a -q)
  ignore_errors: true

- name: "remove all docker containers"
  shell: docker rm $(docker ps -a -q)
  ignore_errors: true

- name: "Some tools for python docker API"
  pip:
    name: "{{ item.name }}"
    version: "{{ item.version }}"
    state: present
  with_items:
  - { name: docker-compose, version: 1.22.0 }

- name: "Build ssh"
  docker_image:
    name: holyssh
    path: /opt/handlers/ssh/
    state: build
    force: yes
#- name: "build opencanary"
#  docker_image:
#    name: opencanary
#    path: /opt/handlers/openCanary/
#    state: build

- name: "build dionaea"
  docker_image:
    name: dionaea
    path: /opt/handlers/dionaea/
    state: build
    force: yes

- name: "Ensure ssh is running"
  docker_container:
    image: holyssh
    name: holysshinst2
    state: started
    restart_policy: always
    ports:
    - 22:2242
    volumes:
    - /var/log/beats:/var

- name: create file
  file:
    path: /var/log/dionaea.log
    state: touch
    mode: 0622

- name: "Ensure dionaea is running"
  docker_container:
    image: dionaea
    name: dionaeainst2
    state: started
    restart_policy: always
    ports:
    - 21:21
    - 42:42
    - 69:69/udp
    - 80:80
    - 135:135
    - 443:443
    - 445:445
    - 1433:1433
    - 1723:1723
    - 1883:1883
    - 1900:1900/udp
    - 3306:3306
    - 5060:5060
    - 5060:5060/udp
    - 5061:5061
    - 11211:11211
    volumes:
    - /var/log/dionaea.log:/tmp/dionaea.log

#- name: "Ensure opencanary is running"
#  docker_container:
#    image: opencanary:latest
#    name: opencanaryinst
#    state: started
#    restart_policy: always
#    ports:
#    - 3306:3306
#    - 80:80
#    - 21:21
#    volumes:
#    - /var/log/opencanary/:/var/log/opencanary/


